Architecture

Compare and contrast the types of frontend development you used in your full stack project, including Express HTML, JavaScript, and the single-page application (SPA).
Why did the backend use a NoSQL MongoDB database?

In my full-stack project, Express HTML is used to send complete HTML pages from the server to the client every time a new page is requested. JavaScript makes the pages interactive, like showing hidden content or validating forms without reloading the page. A Single-Page Application (SPA) loads just one page, and updates the content without reloading the entire page, which makes it faster and smoother to use. The backend uses NoSQL MongoDB because it stores data in a flexible way, so we don’t need to define a strict structure. This makes it easier to scale and handle lots of data, especially when the data changes often.

Functionality

How is JSON different from Javascript and how does JSON tie together the frontend and backend development pieces?
Provide instances in the full stack process when you refactored code to improve functionality and efficiencies, and name the benefits that come from reusable user interface (UI) components.

JSON  is a format used to store and exchange data. It looks like JavaScript objects, but it's not the same. JSON is just data without any behavior or functions, while JavaScript is a programming language that can perform actions. JSON is easy for both humans and machines to read, and it is commonly used to send data between the frontend and backend. In the full-stack project, I refactored some code to make it more efficient by breaking down big functions into smaller ones. This made the code easier to understand and fix. Also, reusable UI components are helpful because I can use the same part of the design in different places without writing the same code again. This saves time and keeps the code clean.

Testing

Methods for request and retrieval necessitate various types of API testing of endpoints, in addition to the difficulties of testing with added layers of security. Explain your understanding of methods, endpoints, and security in a full stack application.

In a full-stack application, methods refer to the types of requests made to the server, like GET , POST , PUT , and DELETE . Endpoints are specific URLs where the server listens for these requests. Testing these endpoints is important to make sure everything works correctly, like checking if the data is retrieved properly or if errors are handled. Security adds complexity because you need to make sure only authorized users can access certain endpoints. This can involve things like using authentication and authorization, often with tools like JWT tokens or OAuth. Testing these security layers ensures that no one can access sensitive data without permission.

Reflection

How has this course helped you in reaching your professional goals? What skills have you learned, developed, or mastered in this course to help you become a more marketable candidate in your career field?

This course has really helped me move closer to my professional goals by teaching me how to build full-stack applications from start to finish. I’ve learned key skills like working with both frontend and backend technologies, using databases like MongoDB, and building APIs. I’ve also developed problem-solving skills and learned how to make my code more efficient. These skills will help me stand out as a candidate in the tech industry because I now have hands-on experience with the tools and technologies that are being used for businesses. 
